<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model PagedList.IPagedList<#= "<" + ViewDataTypeName + ">" #>
@using PagedList.Mvc;
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.

//Literl Name Constants 
string pageNameText = "Список";
string createOperationNameText = "Создать";
string editOperationNameText = "Редактировать";
string detailsOperationNameText = "Детали";
string deleteOperationNameText = "Удалить";
string backwardNameText = "Назад";
//

if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= pageNameText#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>@ViewBag.Title</h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= pageNameText #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink("<#= createOperationNameText #>", "Create")
</p>
<table class="table">
    <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model[0].<#= property.PropertyName #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			<a id="editImgButton" href="@Url.Action("Edit", new { id = item.<#= pkName #> })">
                <img src="@Url.Content(RResources.EditImage)" />
            </a>
            <a id="detailImgButton" href="@Url.Action("Details", new { id = item.<#= pkName #> })">
                <img src="@Url.Content(RResources.DetailImage)" />
            </a>
            <a id="deleteImgButton" href="@Url.Action("Delete", new { id = item.<#= pkName #> })">
                <img src="@Url.Content(RResources.DeleteImage)" />
            </a>
        </td>
<#
} else {
#>
        <td>
            @Html.ActionLink("<#= editOperationNameText #>", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("<#= detailsOperationNameText #>", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("<#= deleteOperationNameText #>", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
<#
}
#>
    </tr>
}

</table>
@if (ViewBag.PageSize < ViewBag.TotalRowCount)
{
    @Html.PagedListPager(Model, newPageNumber => Url.Action("Index", new {newPageNumber}))
}
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>