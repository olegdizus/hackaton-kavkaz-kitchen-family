<?xml version="1.0" encoding="utf-8" ?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

  <changeSet id="CreateDbo_demo_ActualDateProcedure" author="ura">
    <createProcedure>

      CREATE PROCEDURE [dbo].[demo_ActualDate]
      -- Add the parameters for the stored procedure here
      AS
      BEGIN
      -- SET NOCOUNT ON added to prevent extra result sets from
      -- interfering with SELECT statements.
      SET NOCOUNT ON;

      -- Insert statements for procedure here
      /****** Скрипт для команды SelectTopNRows из среды SSMS  ******/
      declare @maxDate datetime
      declare @dateDif int

      declare @ExtraDays int = 2


      print 'обновление [dbo].[ent_Delivery]'

      SELECT @maxDate=max([date])
      FROM [dbo].[ent_Delivery]

      select @maxDate

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif

      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_Delivery]

      update [dbo].[ent_Delivery]
      set
      [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])



      print 'обновление [dbo].[dsh_reportCauseReturn]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([period]))
      FROM [dbo].[dsh_reportCauseReturn]

      update [dbo].[dsh_reportCauseReturn]
      set [period]=DATEADD(day, @dateDif, [period])


      print 'обновление [dbo].[dsh_reportDaysData]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([period]))
      FROM [dbo].[dsh_reportDaysData]

      update [dbo].[dsh_reportDaysData]
      set [period]=DATEADD(day, @dateDif, [period])



      print 'обновление [dbo].[dsh_reportProfit]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([period]))
      FROM [dbo].[dsh_reportProfit]

      update [dbo].[dsh_reportProfit]
      set [period]=DATEADD(day, @dateDif, [period])


      print 'обновление [dbo].[dsh_Salary]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([month]))
      FROM [dbo].[dsh_Salary]

      update [dbo].[dsh_Salary]
      set [month]=DATEADD(day, @dateDif, [month])


      print 'обновление [dbo].[ent_Agreement]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_Agreement]

      update [dbo].[ent_Agreement]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime]),
      [balanceDate]=DATEADD(day, @dateDif, [balanceDate]),
      [changeDate]=DATEADD(day, @dateDif, [changeDate]),
      [recalculateDate]=DATEADD(day, @dateDif, [recalculateDate]),
      [recalculateFromDate]=DATEADD(day, @dateDif, [recalculateFromDate])


      print 'обновление [dbo].[ent_ChangeBalance]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_ChangeBalance]

      update [dbo].[ent_ChangeBalance]
      set [date]=DATEADD(day, @dateDif, [date]),
      [dateCompensation]=DATEADD(day, @dateDif, [dateCompensation]),
      [DebitoreDocumentDate]=DATEADD(day, @dateDif, [DebitoreDocumentDate])


      --	print 'обновление [dbo].[ent_ContactCategory]'
      --	print 'обновление [dbo].[ent_ContactGroups]'



      print 'обновление [dbo].[ent_CorrectDebitore]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_CorrectDebitore]

      update [dbo].[ent_CorrectDebitore]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])


      print 'обновление [dbo].[ent_Payment]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_Payment]

      update [dbo].[ent_Payment]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])



      print 'обновление [dbo].[ent_PaymentOrder]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_PaymentOrder]

      update [dbo].[ent_PaymentOrder]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime]),
      [paymentDate]=DATEADD(day, @dateDif, [paymentDate])



      print 'обновление [dbo].[ent_PaymentOrderOutcome]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_PaymentOrderOutcome]

      update [dbo].[ent_PaymentOrderOutcome]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])



      print 'обновление [dbo].[ent_Plan]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([month]))
      FROM [dbo].[ent_Plan]

      update [dbo].[ent_Plan]
      set [month]=DATEADD(day, @dateDif, [month]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])


      print 'обновление [dbo].[ent_PriceGoods]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_PriceGoods]

      update [dbo].[ent_PriceGoods]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])


      print 'обновление [dbo].[ent_ReturnGoods]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([date]))
      FROM [dbo].[ent_ReturnGoods]

      update [dbo].[ent_ReturnGoods]
      set [date]=DATEADD(day, @dateDif, [date]),
      [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])


      print 'обновление [dbo].[ent_SalesPlans]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([month]))
      FROM [dbo].[ent_SalesPlans]

      update [dbo].[ent_SalesPlans]
      set [month]=DATEADD(day, @dateDif, [month])



      print 'обновление [dbo].[kpi_ApproveHistory]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([hst_datetime]))
      FROM [dbo].[kpi_ApproveHistory]

      update [dbo].[kpi_ApproveHistory]
      set [hst_datetime]=DATEADD(day, @dateDif, [hst_datetime])



      print 'обновление [dbo].[kpi_EmployeeVariantsByMonth]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([month]))
      FROM [dbo].[kpi_EmployeeVariantsByMonth]

      update [dbo].[kpi_EmployeeVariantsByMonth]
      set [month]=DATEADD(day, @dateDif, [month])



      print 'обновление [dbo].[kpi_Matrix]'

      set @dateDif=DATEDIFF(DAY, @maxDate, Getdate()) + @ExtraDays

      select @dateDif


      SELECT DATEADD(day, @dateDif, max([month]))
      FROM [dbo].[kpi_Matrix]

      update [dbo].[kpi_Matrix]
      set [month]=DATEADD(day, @dateDif, [month])


      END

    </createProcedure>

  </changeSet>
</databaseChangeLog>