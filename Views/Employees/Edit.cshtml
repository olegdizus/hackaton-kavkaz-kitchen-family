@model Dashboard.DB.Models.Employee
    
    @{
    	ViewBag.Title = "Редактирование сотрудника";
    }
    
    <h2>@ViewBag.Title</h2>
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
    				@Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
    				@Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.patron, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
    				@Html.EditorFor(model => model.patron, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.patron, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.position_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("position_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.position_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("userName", ViewBag.Users as SelectList, new { id = "Users", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("parent_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.parent_id, "", new { @class = "text-danger" })
                </div>
            </div>
            
            @*<div class="form-group">
                @Html.LabelFor(model => model.isVisible, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.isVisible, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>*@
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Сохранить" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Назад", "Index")
    </div>
