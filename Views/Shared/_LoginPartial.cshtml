@using Core.Web.Security.Principal
@using Dashboard.Models
@using DynamicPermissions.DynamicPermissions
@using Microsoft.AspNet.Identity


@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right"}))
    {
        @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @{
                string UsedMoth;
                if (User.IsInRoles(DashboardRoles.Administrator, DashboardRoles.Director, DashboardRoles.FirstHierarchyLevel, DashboardRoles.SmallAdmin))
                {
                    UsedMoth = "календарный месяц";
                }
                else
                {
                    UsedMoth = "производственный месяц";
                }
            }

                <a href="#" data-toggle="dropdown" class="dropdown-toggle" title="Управление (@UsedMoth)">Здравствуйте, @User.Identity.GetUserName()!<span class="caret"></span></a>

                @*<ul class="dropdown-menu positionMenu">
                </ul>*@
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Выйти</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @*<li>@Html.ActionLink("Регистрация", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@
        <li>@Html.ActionLink("Выполнить вход", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}

@if (PermissionHelper.HasAccess("Account", "GetUserAccountData"))
{

@Scripts.Render(Dashboard.Bundles.ChangeLogin.Scripts.Key)

    <script>

        var currentUserName = '@User.Identity.GetUserName()';
        var userId = '@User.Identity.GetUserId()';

        if (currentUserName != '') {
            GetUserAccountData();
        }


    </script>
}