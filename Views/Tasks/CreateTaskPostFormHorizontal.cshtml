
@using Dashboard.DB.Models.ModelExt
@model Dashboard.DB.Models.TaskPlanner.TaskPost

@using (Html.BeginForm("CreateTaskPost", "Tasks", FormMethod.Post, new { id = "createTaskPostForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @Html.HiddenFor(model => model.id)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.ValidationMessage("CreateTaskPostError", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.taskState_id, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("taskState_id", null, htmlAttributes: new { @class = "form-control modal-control" })
                @Html.ValidationMessageFor(model => model.taskState_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model != null && (Model.taskState_id == (int)TaskStates.OnClosing || Model.taskState_id == (int)TaskStates.OnRemoval))
        {
            <div class="form-group" style="display:none;" id="plannedDateDiv">
                @Html.LabelFor(model => model.PlannedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PlannedDate, new { htmlAttributes = new { @class = "form-control datetimepicker modal-control" } })
                    @Html.ValidationMessageFor(model => model.PlannedDate, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group" id="plannedDateDiv">
                @Html.LabelFor(model => model.PlannedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PlannedDate, new { htmlAttributes = new { @class = "form-control datetimepicker modal-control" } })
                    @Html.ValidationMessageFor(model => model.PlannedDate, "", new { @class = "text-danger" })
                </div>
            </div>
        }

	    <div class="form-group">
		    @Html.LabelFor(model => model.Body, htmlAttributes: new {@class = "control-label col-md-3"})
		    <div class="col-md-9">
			    @Html.TextAreaFor(model => model.Body, htmlAttributes: new {@class = "form-control modal-control", rows = 4})
			    @Html.ValidationMessageFor(model => model.Body, "", new {@class = "text-danger"})
		    </div>
	    </div>
        <span>dsfgdsf</span>
	    <div class="form-group">
		    @Html.Label("Вложение", htmlAttributes: new {@class = "control-label col-md-3"})
		    <div class="col-md-9">
			    <span class="file-input btn btn-primary btn-file">
					<span>
						файл не выбран.
					</span>
					<input type="file" id="uploadFile">
				</span>
			    @Html.ValidationMessage("AttachedFile", new {@class = "text-danger", id = "AttachedFile"})
		    </div>
	    </div>

    </div>
}
